version: '3.9'

services:

  mongodb:
    container_name: mongodb
    image: mongo:latest
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: "${MONGO_ROOT_USERNAME}"
      MONGO_INITDB_ROOT_PASSWORD: "${MONGO_ROOT_PASSWORD}"
      MONGO_INITDB_DATABASE: "${MONGO_DB_NAME}"
    ports:
      - "${MONGO_PORT}:${MONGO_PORT}"
    networks:
      - local
    healthcheck:
      test: "echo 'db.runCommand(\"ping\").ok' | mongosh 0.0.0.0:${MONGO_PORT}/ --quiet"
      interval: 10s
      timeout: 5s
      retries: 2
      start_period: 30s

  # node-api:
  #   container_name: node-api
  #   build:
  #     context: .
  #     dockerfile: Dockerfile
  #   image: clean-node-api
  #   env_file:
  #     - compose.env
  #   ports:
  #     - "${APP_PORT}:${APP_PORT}"
  #     - "9222:9222" # see command "debug" in package.json
  #   networks:
  #     - local
  #   depends_on:
  #     mongodb:
  #       condition: service_healthy
  #       restart: true
  #   working_dir: /app/main/
  #   entrypoint: node
  #   command: index.js

  api:
    container_name: api
    build:
      context: .
      dockerfile: test.Dockerfile
    image: api
    env_file:
      - compose.env
    ports:
      - "${APP_PORT}:${APP_PORT}"
    networks:
      - local
    depends_on:
      mongodb:
        condition: service_healthy
        restart: true
    entrypoint:
      - node
    command: 
      - dist/main/index.js

networks:
  local:
    name: local
    driver: bridge